<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHiAAAAEAIACoDwAAFgAAACgAAAAeAAAAQAAAAAEAIAAAAAAAAA8AAL8yAAC/MgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtJBEAuB8OALke
        DQC5Hg0AuR4NALkeDQC5Hg0AuR4NALkeDQC5Hg0AuR4NALkeDQC5Hg0AuR4NALceDQCLHA0AAxAMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZlOwCiIhEQphwMMqQb
        DDSkGww0pBsMNKQbDDSkGww0pBsMNKQbDDSkGww0pBsMNKQbDDSkGww0pBsMNKIbDDR8GQwcAAwMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABAEBABAEBAASBQQAEgUEABIFBAASBQQAEgUEAFKUWwHoGQiI8xED7PMR
        A+7zEQPu8xED7vMRA+7zEQPu8xED7vMRA+7zEQPu8xED7vMRA+7zEQPu8xED7vMRA+3WFQetTh0QDAAA
        AAAAAAAAAAAAAB0IBwDiPjUA/19RAAAAAAEAAAACAAAAAgAAAAIAAAACAAAAAgAkEAXsFQWt/A0A//sN
        AP/7DQD/+w0A//wNAP//DQD//w4B//8OAf//DgH//w4B//8OAf//DgH//w4B//8OAf/pEwXPZh4QEwAA
        AAAAAAAAAAAAAPhEOgDYOzMR5z82aOlAN5zoQDei6EA3ouhAN6LoQDei6EA3oudAN6PrNCng8S0j//At
        I//wLSP/8C4j/+4rIf/qHRL/9g4C//8OAf//DgH//w4B//8OAf//DgH//w4B//8OAf/oEwXNZh4QEwAA
        AAAAAAAAAAAAAOxBOAv5RDub/kY8/P9GPP//RTv//0U7//9GPP//Rjz//0Y8//9GPP//Rz3//0c9//9G
        PP//Rjz//0c9//9HPf/5Qzn/6SQZ//oNAf//DgH//w4B//8OAf//DgH//w4B//8OAf/oEwXPZx8QEgAA
        AAAAAAAAAAAAAPtFOz3/Rjzz/0Y8//9GPP//UEf//1dN//9MQ///RTv//0Y8//9GPP//Rjz//0Y8//9Q
        R///V07//0xD//9GPP//Rz3/9D0z++gXCtb2EwXM9hMFzPYTBcz2EwXM9hMFzPUUBcviGAiGYiYVBwAA
        AAAAAAAAAAAAAP1GPFb/Rjz9/0Y8//9EOv//fXb//97c//+uqf//SkD//0Y8//9GPP//RTr//1pR///L
        yP//0c///2FY//9FOv//Rjz/+UQ7778zKUDJMRgPyDAYD8gwGA/IMBgPyDAYD8cxGA6tPyIFcxwOAAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9FO///T0b//8XC///5+f//g3z//0Q6//9GPP//Rz3//6un////
        /v//op3//0Y9//9GPP//Rjz/+EQ777IvKT1jExEKXRIQC10SEAtdEhALXRIQC1kRDwsAAAAEfxoVAAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//RDr//2hg///q6f//3dv//1tS//9COP//eHH///T0///S
        0P//VEv//0U7//9GPP//Rjz/+EM5++MyKMzwMSe+7zEmv+8xJr/vMSa/7zEmv+4xJr7VKyJ7Sw8MBQAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0Q6//+Ujv///Pz//62o//9XTv//09D///Tz//93
        cP//RDn//0Y8//9GPP//Rjz/+UM5//AzKf/8Myj//DMo//4zKP//NCn//zQp//80Kf/wMSfFcBcSDgAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0U7//9ORf//xMH///Tz///Ixf///Pz//6ql//9H
        Pf//Rjz//0Y8//9GPP//Rjz/+EQ7/+ZEO//wSD//8Eg//+s/Nf/5Myn//zQp//80Kf/wMSfDdBgTDgAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0Y8//9EOv//amL//+3s////////3dz//1lQ//9F
        O///Rjz//0Y8//9GPP//Rjz/+UY8//JYT///YVj//2JZ//VWTf/1NSv//zQp//80Kf/wMSfFdRgTDgAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0Y8//9EOf//dGz///Hw///+/v//4+L//2FY//9E
        Ov//Rjz//0Y8//9GPP//Rjz/+UY8//JXTv//YFf//2FY//ZWTf30NSvx/zQp7/80Ke7yMSeieBgTCAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0U7//9VTP//0tD//+rp//+sp///+vr//7i0//9K
        QP//Rjz//0Y8//9GPP//Rjz/+UY8//JXTv//YFf//2BX//RbUuLZOC9J/jQpMfwzKTHzMicW/0M1AAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//Rjz//0Y9//+loP///Pz//5iT//9LQv//wL3///n5//+F
        f///RDr//0Y8//9GPP//Rjz/+UY8//JXTv7/YFf+/2BX/vZdVM2fQjwU/jQpAP00KQDzMicARg4LAAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9GPP//RDr//3hw///z8///zMr//1FI//9DOf//aGD//+rp///f
        3v//XlX//0Q6//9GPP//Rjz/+UU79ONNRHz+YFdZ/V9WWfddVDiwQjwCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9FO///Vkz//9DN///s6///cWr//0Q6//9GPP//RTv//5eR///3
        9///ran//0k///9GPP//Rjz/+UQ77rsxKjHxW1IA71pSAOJVTgBQIB4ALBQSACoTEQAWCgkAAAAAAAAA
        AAAAAAAAAAAAAP1GPFf/Rjz9/0Y8//9FO///U0r//3dw//9sZP//SD7//0Y8//9GPP//RTv//05F//90
        bf//cWn//0tB//9GPP//Rjz/+UQ77rEwKTgAAAAEAAAABQAAAAUAAAAFAAAABQAAAAUAAAABYCwoAAAA
        AAAAAAAAAAAAAP5GPEX/Rjz4/0Y8//9GPP//RTv//0M5//9EOv//Rjz//0Y8//9GPP//Rjz//0U7//9D
        Of//RDn//0Y8//9GPP//Rjz/+Eg++eNgWbzra2Or6mpirOpqYqzqamKs6mpirOppYqvQXldsRB8dBAAA
        AAAAAAAAAAAAAP5GPBH/Rjy0/0Y8//9GPP//Rjz//0Y8//9GPP//Rjz//0Y8//9GPP//Rjz//0U7//9F
        O///RTv//0U7//9FO//+Rjz/+FlQ//1yav//c2v//3Nr//9za///c2v//3Nr//9za//vbGTEbjIvDgAA
        AAAAAAAAAAAAAP9GPAD+Rjwg/0Y8iP9GPLn+Rjy9/kY8vf5GPL3+Rjy9/kY8vf5GPL3+TkTn/1JI//9S
        SP//Ukj//1JI//5TSv/9X1b//XBo//9za///c2v//3Nr//9za///c2v//3Nr//9za//wbGXDdDQxDgAA
        AAAAAAAAAAAAAPpEOwD/RjwA/0k+APlEOwf4RDoI+EQ6CPhEOgj4RDoI+EQ6CPRHPQn+cWmn/3Jp//9y
        af//cmn//3Fp//9yav//c2v//3Nr//9za///c2v//3Nr//9za///c2v//3Nr//9za//wbGXEdDQxDgAA
        AAAAAAAAAAAAAAAAAAAAAAAA+UQ7APlEOwD3RDoA90Q6APdEOgD3RDoA90Q6AP8AAAD+c2uN/3Nr9f9z
        a/b/c2v2/3Nr9v9za/b/c2v2/3Nr9v9za/b/c2v2/3Nr9v9za/b/c2v2/3Nr9v9za/bybWaqeDYyCQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJfWAD+c2sY/XJqPv1y
        akD9cmpA/XJqQP1yakD9cmpA/XJqQP1yakD9cmpA/XJqQP1yakD9cmpA/XJqQP1yaj/zbmYeVickAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+c2sA/nNrAP5z
        awD+c2sA/nNrAP5zawD+c2sA/nNrAP5zawD+c2sA/nNrAP5zawD+c2sA/nNrAP5yawD0bmYAVyclAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD////8/////P////z////8//AADP/gAAT4AAAE4AAABMAAAATAAAAEwAAADMAAAAzAAAAEwAAABMAA
        AATAAAAEwAAABMAAAAzAAAB8wAAAfMAAB/zAAAAMwAAABMAAAATgAAAE+AAABP/wAAT/8AAM/////P//
        //z////8/////A==
</value>
  </data>
</root>